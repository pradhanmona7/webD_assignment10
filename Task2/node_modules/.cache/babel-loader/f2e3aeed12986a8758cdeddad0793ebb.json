{"ast":null,"code":"var _jsxFileName = \"/Users/mohithparvataneni/Desktop/WEB_DEV/Assignment-8/src/data.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BrowserRouter as Router, Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport Hourly from \"./Hourly\";\nimport { render } from \"@testing-library/react\";\nimport App from \"./App\";\n\nvar moment = require(\"moment\");\n\nclass WeatherData extends React.Component {\n  constructor(props) {\n    super(props);\n  } //const DisplayData = ({ reading, index, completeData }) => {\n\n\n  render() {\n    let _date = new Date();\n\n    const weekday = this.props.reading.dt * 1000;\n\n    _date.setTime(weekday);\n\n    const _img = `owf owf-${this.props.reading.weather[0].id} owf-5x`;\n    const fahrenheitMax = this.props.reading.main.temp_max;\n    const fahrenheitMin = this.props.reading.main.temp_min;\n    const farenheitTemp = this.props.reading.main.temp;\n    console.log(farenheitTemp);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `/hourlyForecast/${this.props.reading.day}`,\n        state: {\n          completeData: this.props.completeData,\n          cityName: this.props.cityName\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card py-2 mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"text-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    }, moment(_date).format(\"MMMM D YYYY\")), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }, this.props.reading.day), /*#__PURE__*/React.createElement(\"i\", {\n      className: _img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, this.props.reading.weather[0].description), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }, \"Temperature: \", farenheitTemp, \"\\xB0F\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, \"Minimum: \", fahrenheitMin, \"\\xB0F and Maximum: \", fahrenheitMax, \"\\xB0F\")))))));\n  }\n\n}\n\nexport default withRouter(WeatherData);","map":{"version":3,"sources":["/Users/mohithparvataneni/Desktop/WEB_DEV/Assignment-8/src/data.js"],"names":["React","Link","BrowserRouter","Router","Route","Switch","Redirect","withRouter","Hourly","render","App","moment","require","WeatherData","Component","constructor","props","_date","Date","weekday","reading","dt","setTime","_img","weather","id","fahrenheitMax","main","temp_max","fahrenheitMin","temp_min","farenheitTemp","temp","console","log","pathname","day","state","completeData","cityName","format","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport Hourly from \"./Hourly\";\nimport { render } from \"@testing-library/react\";\nimport App from \"./App\";\nvar moment = require(\"moment\");\n\nclass WeatherData extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  //const DisplayData = ({ reading, index, completeData }) => {\n  render() {\n    let _date = new Date();\n    const weekday = this.props.reading.dt * 1000;\n    _date.setTime(weekday);\n    const _img = `owf owf-${this.props.reading.weather[0].id} owf-5x`;\n    const fahrenheitMax = this.props.reading.main.temp_max;\n\n    const fahrenheitMin = this.props.reading.main.temp_min;\n\n    const farenheitTemp = this.props.reading.main.temp;\n    console.log(farenheitTemp);\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <Link\n            to={{\n              pathname: `/hourlyForecast/${this.props.reading.day}`,\n              state: {\n                completeData: this.props.completeData,\n                cityName: this.props.cityName,\n              },\n            }}\n          >\n            <div className=\"card py-2 mt-3\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <h4 className=\"text-secondary\">\n                    {moment(_date).format(\"MMMM D YYYY\")}\n                  </h4>\n                  <h5>{this.props.reading.day}</h5>\n                  <i className={_img}></i>\n                  <p>{this.props.reading.weather[0].description}</p>\n                  <h5>Temperature: {farenheitTemp}°F</h5>\n                  <p>\n                    Minimum: {fahrenheitMin}°F and Maximum: {fahrenheitMax}°F\n                  </p>\n                </div>\n              </div>\n            </div>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(WeatherData);\n"]},"metadata":{},"sourceType":"module"}